var searchIndex = JSON.parse('{\
"auth":{"doc":"","t":[4,13,13,13,13,11,11,11,11,11,11,11,5,11,11,5,5,11,11,11,11,11,5,5,11],"n":["AuthError","BadBase64","DecryptError","PlainTextNoti64","ShortData","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","generate_key","into","serialize","set_key","set_key_fallible","to_owned","to_string","try_from","try_into","type_id","user_cookie_decode","user_cookie_generate","vzip"],"q":["auth","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Token is not base64 encoded.","Failed to decrypt token.","Token plaintext does not contain a UserID.","Token data is too short.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","This function should only be called from tests","","","","","","Function decrypts a UserID which was encrypted with …","Function encrypts a UserID with a nonce and returns it as …",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["autherror",4]],["autherror",4]],[[["",0],["",0]]],[[["autherror",4],["formatter",3]],["result",6]],[[["autherror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["autherror",4]],["result",4]],[[]],[[]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["string",3]],["result",4,[["i64",0],["autherror",4]]]],[[["i64",0]],["string",3]],[[]]],"p":[[4,"AuthError"]]},\
"database":{"doc":"","t":[2,6,6,0,0,0,0,5,0,5,5,5,0,0,0,0,14,0,0,0,0,5,5,0,0,0,2,3,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,12,11,12,12,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,12,11,8,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,13,6,13,4,13,3,13,3,13,13,4,3,4,3,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,12,12,5],"n":["DatabaseError","DbConnection","Transaction","asset","compact_mediafile","episode","error","generate_key","genre","get_conn","get_conn_logged","get_conn_memory","library","media","mediafile","movie","opt_update","progress","query_ext","rw_pool","season","set_key","try_get_conn","tv","user","utils","write_tx","Asset","InsertableAsset","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","file_ext","file_ext","fmt","fmt","from","from","get_by_id","get_of_user","get_url_by_file","id","insert","insert_many","into","into","into_media_backdrop","into_media_poster","local_path","local_path","remote_url","remote_url","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CompactMediafile","all_for_media","all_for_tv","borrow","borrow_mut","clone","clone_into","duration","from","id","into","name","target_file","to_owned","try_from","try_into","type_id","unmatched_for_library","vzip","Episode","EpisodeWrapper","InsertableEpisode","UpdateEpisode","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","delete","deserialize","episode","episode","episode","episode_","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_row","get","get_all_of_season","get_all_of_tv","get_by_id","get_first_for_season","get_first_for_show","get_last_watched_episode","get_next_episode","get_prev_episode","get_season_episode_by_id","get_season_number","get_seasonid","id","id","insert","into","into","into","into","into_episode","media","media","media","ne","seasonid","seasonid","seasonid","seasonid","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","AuthError","BadBase64","DatabaseError","DatabaseError","DecryptError","PlainTextNoti64","ShortData","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","into","into","serialize","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","Genre","GenreMedia","InsertableGenre","InsertableGenreMedia","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decouple_all","delete","deserialize","eq","eq","fmt","fmt","from","from","from","from","genre_id","genre_id","get_by_id","get_by_media","get_by_name","id","id","insert","insert","insert_pair","into","into","into","into","media_id","media_id","name","name","ne","ne","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Episode","InsertableLibrary","Library","MediaType","Movie","Tv","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compatible","decode","default","delete","deserialize","deserialize","deserialize","encode_by_ref","eq","equivalent","fmt","fmt","from","from","from","get_all","get_hash","get_locations","get_one","get_size","hash","hidden","id","insert","into","into","into","locations","locations","mark_hidden","media_type","media_type","name","name","serialize","serialize","serialize","size_hint","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","vzip","vzip","vzip","InsertableMedia","Media","UpdateMedia","added","added","added","backdrop","backdrop","backdrop_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decouple_mediafiles","default","default","default","delete","delete_by_lib_id","description","description","description","deserialize","deserialize","eq","fmt","fmt","fmt","from","from","from","from","get","get_all","get_by_name_and_lib","get_compact","get_first_duration","get_id_by_name","get_of_genre","get_of_mediafile","get_of_year","get_random_with","get_recently_added","get_search","get_top_rated","id","insert","insert_blind","insert_with_id","into","into","into","into","lazy_insert","library_id","library_id","media_mediatype","media_type","media_type","media_type","name","name","name","poster","poster","poster_path","rating","rating","rating","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","year","year","year","InsertableMediaFile","MediaFile","UpdateMediaFile","audio","audio","audio","audio_language","audio_language","audio_language","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channels","channels","channels","clone","clone","clone","clone_into","clone_into","clone_into","codec","codec","codec","container","container","container","corrupt","corrupt","corrupt","default","default","delete","delete_by_lib_id","deserialize","duration","duration","duration","episode","episode","episode","eq","eq","exists","exists_by_file","fmt","fmt","fmt","from","from","from","from_row","get_by_file","get_by_lib","get_by_lib_null_media","get_largest_duration","get_many","get_of_media","get_of_show","get_one","id","insert","into","into","into","into","library_id","library_id","media_id","media_id","media_id","ne","ne","original_resolution","original_resolution","original_resolution","profile","profile","profile","quality","quality","quality","raw_name","raw_name","raw_name","raw_year","raw_year","raw_year","season","season","season","serialize","serialize","target_file","target_file","target_file","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","Movie","borrow","borrow_mut","clone","clone_into","count_children","from","into","to_owned","try_from","try_into","type_id","vzip","Progress","borrow","borrow_mut","delta","fmt","from","get_continue_watching","get_for_media_user","get_progress_for_media","get_total_for_media","get_total_for_tv","get_total_time_spent_watching","id","into","media_id","populated","serialize","set","try_from","try_into","type_id","user_id","vzip","QueryExt","bind_all","SqlitePool","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","read","read_ref","to_owned","try_from","try_into","type_id","vzip","write_tx","writer","writer","InsertableSeason","Season","UpdateSeason","added","added","added","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count_children","default","default","delete","delete_by_id","deserialize","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","get","get_all","get_by_id","get_first","get_tvshowid","id","insert","into","into","into","ne","ne","poster","poster","poster","season_number","season_number","season_number","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tvshowid","tvshowid","type_id","type_id","type_id","update","vzip","vzip","vzip","TVShow","borrow","borrow_mut","count_children","deserialize","eq","fmt","from","id","into","ne","serialize","try_from","try_into","type_id","vzip","0","Black","Credential","Dark","DefaultVideoQuality","DirectPlay","InsertableUser","Light","Login","Owner","Resolution","Role","Roles","Theme","UpdateableUser","User","User","UserID","UserSettings","authenticate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claimed_invite","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compatible","compatible","create_cookie","decode","decode","decode","decode","default","default","default","default_false","default_theme","default_true","default_video_quality","delete","delete_token","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_by_ref","encode_by_ref","encode_by_ref","encode_by_ref","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get_all","get_all_invites","get_by_id","get_pass","has_role","hash","id","insert","into","into","into","into","into","into","into","into","into","into","invalidate_token","invite_token","invite_token_valid","ne","ne","new_invite","password","password","picture","prefs","prefs","prefs","produces","roles","roles","roles","serialize","serialize","serialize","serialize","serialize","serialize","set_password","set_picture","set_username","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","update","username","username","username","verify","verify_cookie","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","1","ffpath"],"q":["database","","","","","","","","","","","","","","","","","","","","","","","","","","","database::asset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::compact_mediafile","","","","","","","","","","","","","","","","","","","database::episode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::error::DatabaseError","database::genre","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::library","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::media","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::mediafile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::movie","","","","","","","","","","","","","database::progress","","","","","","","","","","","","","","","","","","","","","","","database::query_ext","","database::rw_pool","","","","","","","","","","","","","","","","","","","database::season","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","database::tv","","","","","","","","","","","","","","","","database::userdatabase::user::DefaultVideoQuality","","database::utils"],"d":["","","","","","","","","","Function which returns a Result&lt;T, E&gt; where T is a new …","Function which returns a Result&lt;T, E&gt; where T is a new …","","","","","","","","","","","","","","","","Ugly hack because of a shitty deadlock in <code>Pool</code>","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A compact version of <code>MediaFile</code>. Useful in cases where we …","Method will return all mediafiles for a media id.","Method will return all mediafiles for a tv show.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Method will return all the unmatched mediafiles for a …","","Episode struct encapsulates a media entry representing a …","This struct is purely used for querying episodes which …","","","","","","","","","","","","","","","","Method deletes a episode based on the tv show id, season …","","episode number","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Method returns a episodes discriminated by episode number, …","Method returns all of the episodes belonging to a season.","Method returns all of the episodes belonging to a tv show.","","","","Function will query the last episode that was watched for …","Function will query for the episode after the episode …","Function will query for the episode after the episode …","","","","","","Method inserts a new episode into the database","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Regerence to a media object which represents this epsiode. …","","","","Season id foreign_key","","","","","","","","","","","","","","","","","","","Method updates the rows of a episode.","","","","","","Token is not base64 encoded.","","Generic database error: {0:?}","Failed to decrypt token.","Token plaintext does not contain a UserID.","Token data is too short.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Struct shows a single genre entry","Intermediary table showing the relationship between a …","Genre entry that can be inserted into the db.","Struct which is used to pair a genre to a media","","","","","","","","","","","","","","","","","Decouple media from all genres passed in","Method removes a genre from the genre table based on its id","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Method returns a genre based on genre_id and media_id","Method returns all of the episodes belonging to a tv show.","Method returns the entry of a genre if exists based on its …","","","Method inserts a new genre into the table otherwise …","Method inserts a new entry into the intermediary genre …","Method inserts a pair into the genre media table based on …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Genre name, ie “Action”","Genre name","","","","","","","","","","","","","","","","","","","","","","","","","InsertableLibrary struct, same as <code>Library</code> but without the …","Library struct which we can use to deserialize database …","Enum represents a media type and can be used on a library …","","","","","","","","","","","","","","","","","","Method filters the database for a library with the id …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Method returns all libraries that exist in the database in …","","","Method filters the database for a library with the id …","","","Is library hidden?","","Method inserts a InsertableLibrary object into the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","a path on the filesystem that holds media. ie …","","","Enum used to identify the media type that this library …","","unique name of the library","","","","","","","","","","","","","","","","","","","","","","","","","Struct which represents a insertable media object. It is …","Media struct that represents a media object, usually a …","Struct which is used when we need to update information …","Date when this media object was created and inserted into …","","","","","Path to the backdrop for this media object.","","","","","","","","","","","","","","","","","Method deletes a media object based on its id.","This function exists because for some reason <code>CASCADE DELETE</code>…","description of this media object. Usually overview of a …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Method returns a media object based on its id","Method returns all Media objects associated with a …","Method to get a entry in a library based on name and …","Get compact representation of a media object. This returns …","","","","","","","Method returns the recently added medias","","Method returns the top rated medias","unique id.","Method used to insert a new media object. Caller can …","Method blindly inserts <code>self</code> into the database without …","Method used to insert a new media object with a specific …","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lazily inserts the media object passed in with the …","id of the library that this media objects belongs to.","","","Media type encoded as a string. Either movie/tv/episode or …","","","name of this media object. Usually the title of a movie, …","","","","","Path to the media poster.","rating provided by any API that is encoded as a signed …","","","","","","","","","","","","","","","","Method used to update the fields of a media object that is …","","","","Year in which this movie/tv show/episode was …","","","Same as <code>MediaFile</code> except its missing the id field.","MediaFile struct which represents a media file on the …","Same as <code>MediaFile</code> except its missing the id and library_id …","Audio codec specifier that we might get from ffprobe","","","Primary audio language","","","","","","","","","Audio channels count","","","","","","","","","Codec that we might get from ffprobe when running it …","","","Container descriptor that we might get from ffprobe","","","Flag which tells us if the file is corrupted or not. ie if …","","","","","Method deletes mediafile matching the id supplied","Function deletes all mediafiles with <code>library_id</code> of lib_id. …","","Duration of the video file that we obtain from ffprobe","","","Episode number that we might get from using regex and the …","","","","","Method checks if a mediafile with the the target file …","Method checks whether a mediafile entry with the filepath …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Method returns all mediafiles associated with a library.","Method returns all mediafiles associated with a library …","Function will return the largest duration for a media.","Method returns all metadata for a set of mediafile ids.","Method returns all mediafiles associated with a Media …","","Method returns all metadata of a mediafile based on the id …","Unique identifier of a mediafile.","Method inserts a new mediafile into the database.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Library foreign key linking this entry to the library …","","Foreign key linking this entry to the media table or <code>Media</code> …","","","","","Video resolution that we can obtain from ffprobe","","","avc_profile","","","Quality string that we might get from ffprobe when running …","","","Raw name that we extract from the filename using regex and …","","","Raw year we might be able to extract from the filename …","","","Season number that we might get from using regexa and the …","","","","","String representing the file path of the file we target. …","","","","","","","","","","","","","","","Method updates the columns of a mediafile entry with what …","","","","","","","","","Method will return the number of mediafiles linked against …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Trait contains some extensions for <code>sqlx</code>.","Method which allows you to bind several values in one go. …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Struct representing a insertable season Its exactly the …","Struct represents a season entry in the database.","Struct used to update information about a season in the …","String holding the date when the season was added to the …","","","","","","","","","","","","","","","","","","Method deletes a season entry that belongs to a tv show.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Method returns the season based on the season number …","Method returns all of the seasons that are linked to a tv …","","Method will return the oldest season for a tv show that is …","","","Method inserts a new season and links it to a tv show …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Id of the asset pointing to the poster.","","","Season number","","","","","","","","","","","","","","Foreign key to the tv show we’d like to link against","","","","","Method updates a seasons entry based on tv show id and …","","","","Struct represents a tv show entry in the database. This is …","","","","","","","Returns the argument unchanged.","id of a media object we marked as a tv show.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents DirectPlay quality","","","","","Represents a default video quality made up of resolution …","","","","","","","","","Method gets one entry from the table users based on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the default video quality for user.","Method deletes a entry from the table users and returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Method gets all entries from the table users.","","","Method gets users password from the table users based on …","","","","Method consumes a InsertableUser object and inserts the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Will return whether the token is valid and hasnt been …","","","","","","","","","","","","","","","","","","","","Method resets the password for a user to a new password.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,2,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,4,5,6,7,4,5,6,7,4,5,4,5,7,4,7,4,6,7,5,5,4,5,6,7,4,5,6,7,5,4,4,4,4,4,4,4,4,4,4,4,4,4,5,6,4,5,6,7,5,4,6,7,5,4,5,6,7,4,4,5,4,5,6,7,4,5,6,7,4,5,6,7,7,4,5,6,7,0,8,0,9,8,8,8,8,9,8,9,8,9,8,9,8,8,9,9,8,9,9,8,9,8,8,9,8,9,8,9,8,9,8,9,8,9,10,0,0,0,0,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,11,11,11,12,11,12,11,12,13,14,12,14,11,11,11,11,12,13,14,14,11,12,13,14,12,14,11,13,11,12,11,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,11,12,13,14,15,0,0,0,15,15,15,16,17,15,16,17,15,16,17,15,16,17,15,15,15,16,15,16,17,15,15,15,15,15,15,16,17,16,15,16,16,16,15,16,16,17,15,16,17,16,17,16,16,17,16,17,15,16,17,15,15,16,17,15,15,15,15,16,17,15,16,17,15,16,17,15,15,16,17,0,0,0,18,19,20,19,20,18,18,19,20,18,19,20,18,19,20,18,19,20,18,18,19,20,18,18,18,19,20,18,20,18,18,19,20,18,19,20,20,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,18,18,19,20,19,18,19,18,18,19,20,18,19,20,19,20,18,18,19,20,18,18,19,20,18,19,20,18,19,20,18,19,20,20,18,19,20,18,19,20,0,0,0,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,22,23,21,21,23,21,22,23,21,22,23,21,23,22,21,21,22,23,21,22,23,21,21,21,21,21,21,21,21,21,21,22,21,21,22,23,21,22,21,22,23,21,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,23,21,22,23,0,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,0,0,0,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,29,30,28,28,28,29,30,28,30,28,30,28,29,30,28,28,28,28,28,28,29,28,29,30,28,30,28,29,30,28,29,30,28,29,28,29,30,28,29,30,28,29,30,28,30,28,29,30,30,28,29,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,33,0,33,0,34,0,33,0,35,34,0,0,0,0,0,35,0,0,36,33,34,37,35,38,32,36,39,40,41,33,34,37,35,38,32,36,39,40,41,39,33,34,37,38,32,33,34,37,38,32,33,38,41,33,37,38,32,37,32,41,0,0,0,37,36,41,33,34,37,35,38,32,39,40,41,33,37,38,32,35,38,32,35,38,33,34,37,35,38,32,36,33,34,37,35,38,32,36,39,40,41,36,36,41,36,36,36,0,36,39,33,34,37,35,38,32,36,39,40,41,41,41,41,38,32,41,39,41,36,36,39,40,38,36,36,39,33,34,37,35,38,32,36,36,36,33,38,33,34,37,38,32,33,34,37,35,38,32,36,39,40,41,33,34,37,35,38,32,36,39,40,41,33,34,37,35,38,32,36,39,40,41,33,37,38,32,40,36,39,41,0,41,33,34,37,35,38,32,36,39,40,41,42,42,0],"f":[null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[],["option",4,[["dbconnection",6]]]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["asset",3]],["asset",3]],[[["insertableasset",3]],["insertableasset",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["asset",3]],[[],["insertableasset",3]],null,null,[[["asset",3],["formatter",3]],["result",6]],[[["insertableasset",3],["formatter",3]],["result",6]],[[]],[[]],[[["transaction",6],["i64",0]]],[[["transaction",6],["userid",3]]],[[["transaction",6],["pathbuf",3]]],null,[[["insertableasset",3],["transaction",6]]],[[["transaction",6],["vec",3,[["insertableasset",3]]]]],[[]],[[]],[[["asset",3],["transaction",6],["i64",0]]],[[["asset",3],["transaction",6],["i64",0]]],null,null,null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compactmediafile",3]],["compactmediafile",3]],[[["",0],["",0]]],null,[[]],null,[[]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["transaction",6],["i64",0]]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["episode",3]],["episode",3]],[[["episodewrapper",3]],["episodewrapper",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["updateepisode",3]],[[["transaction",6],["i64",0]]],[[],["result",4,[["updateepisode",3]]]],null,null,null,null,[[["episodewrapper",3],["episodewrapper",3]],["bool",0]],[[["episode",3],["formatter",3]],["result",6]],[[["episodewrapper",3],["formatter",3]],["result",6]],[[["insertableepisode",3],["formatter",3]],["result",6]],[[["updateepisode",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0]],["result",6,[["episodewrapper",3]]]],[[["transaction",6],["i64",0],["i64",0],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0],["userid",3]]],[[["episode",3],["transaction",6]]],[[["episode",3],["transaction",6]]],[[["transaction",6],["i64",0]]],[[["episode",3],["transaction",6]]],[[["transaction",6],["i64",0]]],null,null,[[["insertableepisode",3],["transaction",6]]],[[]],[[]],[[]],[[]],[[["episodewrapper",3],["media",3]],["episode",3]],null,null,null,[[["episodewrapper",3],["episodewrapper",3]],["bool",0]],null,null,null,null,[[["episode",3]],["result",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["updateepisode",3],["transaction",6],["i64",0]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["autherror",4]],["autherror",4]],[[["databaseerror",4]],["databaseerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["autherror",4],["formatter",3]],["result",4,[["error",3]]]],[[["autherror",4],["formatter",3]],["result",4,[["error",3]]]],[[["databaseerror",4],["formatter",3]],["result",6]],[[["databaseerror",4],["formatter",3]],["result",6]],[[]],[[]],[[["error",4]],["databaseerror",4]],[[]],[[]],[[["autherror",4]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["genre",3]],["genre",3]],[[["genremedia",3]],["genremedia",3]],[[["insertablegenre",3]],["insertablegenre",3]],[[["insertablegenremedia",3]],["insertablegenremedia",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[],["result",4,[["genre",3]]]],[[["genre",3],["genre",3]],["bool",0]],[[["genremedia",3],["genremedia",3]],["bool",0]],[[["genre",3],["formatter",3]],["result",6]],[[["genremedia",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["string",3]]],null,null,[[["insertablegenre",3],["transaction",6]]],[[["insertablegenremedia",3],["transaction",6]]],[[["i64",0],["i64",0],["transaction",6]]],[[]],[[]],[[]],[[]],null,null,null,null,[[["genre",3],["genre",3]],["bool",0]],[[["genremedia",3],["genremedia",3]],["bool",0]],[[["genre",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mediatype",4]],["mediatype",4]],[[["library",3]],["library",3]],[[["insertablelibrary",3]],["insertablelibrary",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["sqlitetypeinfo",3]],["bool",0]],[[["sqlitevalueref",3]],["result",4,[["mediatype",4],["box",3,[["error",8]]]]]],[[],["mediatype",4]],[[["transaction",6],["i64",0]]],[[],["result",4,[["mediatype",4]]]],[[],["result",4,[["library",3]]]],[[],["result",4,[["insertablelibrary",3]]]],[[["mediatype",4]],["isnull",4]],[[["mediatype",4],["mediatype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["mediatype",4],["formatter",3]],["result",6]],[[["mediatype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["transaction",6]]],[[["",0],["",0]],["u64",0]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["mediatype",4],["",0]]],null,null,[[["insertablelibrary",3],["transaction",6]]],[[]],[[]],[[]],null,null,[[["transaction",6],["i64",0]]],null,null,null,null,[[["mediatype",4]],["result",4]],[[["library",3]],["result",4]],[[["insertablelibrary",3]],["result",4]],[[["mediatype",4]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[["string",3]],["result",4,[["mediatype",4]]]],[[["str",0]],["result",4,[["mediatype",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["sqlitetypeinfo",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["media",3]],["media",3]],[[["insertablemedia",3]],["insertablemedia",3]],[[["updatemedia",3]],["updatemedia",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["transaction",6],["i64",0]]],[[],["media",3]],[[],["insertablemedia",3]],[[],["updatemedia",3]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],null,null,null,[[],["result",4,[["media",3]]]],[[],["result",4,[["updatemedia",3]]]],[[["media",3],["media",3]],["bool",0]],[[["media",3],["formatter",3]],["result",6]],[[["insertablemedia",3],["formatter",3]],["result",6]],[[["updatemedia",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["insertablemedia",3]],["updatemedia",3]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0],["str",0]]],[[["transaction",6],["i64",0]]],[[["media",3],["transaction",6]]],[[["transaction",6],["str",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["str",0],["i64",0]]],[[["transaction",6],["i64",0]]],null,[[["insertablemedia",3],["transaction",6]]],[[["insertablemedia",3],["transaction",6]]],[[["insertablemedia",3],["transaction",6],["i64",0]]],[[]],[[["media",3]],["tvshow",3]],[[]],[[]],[[["insertablemedia",3],["transaction",6]]],null,null,[[["transaction",6],["i64",0]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["media",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["updatemedia",3],["transaction",6],["i64",0]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["mediafile",3]],["mediafile",3]],[[["insertablemediafile",3]],["insertablemediafile",3]],[[["updatemediafile",3]],["updatemediafile",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,null,[[],["insertablemediafile",3]],[[],["updatemediafile",3]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[],["result",4,[["updatemediafile",3]]]],null,null,null,null,null,null,[[["mediafile",3],["mediafile",3]],["bool",0]],[[["updatemediafile",3],["updatemediafile",3]],["bool",0]],[[["insertablemediafile",3],["transaction",6]]],[[["transaction",6],["str",0]]],[[["mediafile",3],["formatter",3]],["result",6]],[[["insertablemediafile",3],["formatter",3]],["result",6]],[[["updatemediafile",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["result",6,[["mediafile",3]]]],[[["transaction",6],["str",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],null,[[["insertablemediafile",3],["transaction",6]]],[[]],[[["mediafile",3]],["media",3]],[[]],[[]],null,null,null,null,null,[[["mediafile",3],["mediafile",3]],["bool",0]],[[["updatemediafile",3],["updatemediafile",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["mediafile",3]],["result",4]],[[["insertablemediafile",3]],["result",4]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["updatemediafile",3],["transaction",6],["i64",0]]],[[]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["movie",3]],["movie",3]],[[["",0],["",0]]],[[["transaction",6],["i64",0]]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["progress",3],["formatter",3]],["result",6]],[[]],[[["transaction",6],["userid",3],["i64",0]]],[[["transaction",6],["userid",3],["i64",0]]],[[["transaction",6],["i64",0],["userid",3]]],[[["transaction",6],["media",3],["userid",3]]],[[["transaction",6],["userid",3],["i64",0]]],[[["transaction",6],["userid",3]]],null,[[]],null,null,[[["progress",3]],["result",4]],[[["transaction",6],["i64",0],["userid",3],["i64",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[]],null,[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["sqlitepool",3]],["sqlitepool",3]],[[["",0],["",0]]],[[["sqlitepool",3],["formatter",3]],["result",6]],[[]],[[]],[[["sqliteconnection",3],["pool",3,[["sqlite",3]]]],["sqlitepool",3]],[[["sqlitepool",3]],["pool",3,[["sqlite",3]]]],[[["sqlitepool",3]],["pool",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["ownedmutexguard",3]]],[[["sqlitepool",3]],["arc",3,[["mutex",3,[["sqliteconnection",3]]]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["season",3]],["season",3]],[[["insertableseason",3]],["insertableseason",3]],[[["updateseason",3]],["updateseason",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["transaction",6],["i64",0]]],[[],["insertableseason",3]],[[],["updateseason",3]],[[["transaction",6],["i64",0],["i64",0]]],[[["transaction",6],["i64",0]]],[[],["result",4,[["season",3]]]],[[],["result",4,[["insertableseason",3]]]],[[],["result",4,[["updateseason",3]]]],[[["season",3],["season",3]],["bool",0]],[[["updateseason",3],["updateseason",3]],["bool",0]],[[["season",3],["formatter",3]],["result",6]],[[["updateseason",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["transaction",6],["i64",0],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],[[["transaction",6],["i64",0]]],null,[[["insertableseason",3],["transaction",6],["i64",0]]],[[]],[[]],[[]],[[["season",3],["season",3]],["bool",0]],[[["updateseason",3],["updateseason",3]],["bool",0]],null,null,null,null,null,null,[[["season",3]],["result",4]],[[["insertableseason",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["updateseason",3],["transaction",6],["i64",0]]],[[]],[[]],[[]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["transaction",6],["i64",0]]],[[],["result",4,[["tvshow",3]]]],[[["tvshow",3],["tvshow",3]],["bool",0]],[[["tvshow",3],["formatter",3]],["result",6]],[[]],null,[[]],[[["tvshow",3],["tvshow",3]],["bool",0]],[[["tvshow",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["transaction",6],["string",3],["string",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["theme",4]],["theme",4]],[[["defaultvideoquality",4]],["defaultvideoquality",4]],[[["usersettings",3]],["usersettings",3]],[[["userid",3]],["userid",3]],[[["roles",3]],["roles",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["sqlitetypeinfo",3]],["bool",0]],[[],["bool",0]],[[["userid",3]],["string",3]],[[["sqlitevalueref",3]],["result",4,[["theme",4],["box",3,[["error",8]]]]]],[[],["result",4,[["usersettings",3],["boxdynerror",6]]]],[[],["result",4,[["userid",3],["box",3,[["error",8]]]]]],[[],["result",4,[["roles",3],["boxdynerror",6]]]],[[],["usersettings",3]],[[],["roles",3]],[[],["login",3]],[[],["bool",0]],[[],["theme",4]],[[],["bool",0]],null,[[["transaction",6],["userid",3]]],[[["transaction",6],["string",3]]],[[],["result",4,[["theme",4]]]],[[],["result",4,[["defaultvideoquality",4]]]],[[],["result",4,[["usersettings",3]]]],[[],["result",4,[["role",4]]]],[[],["result",4,[["userid",3]]]],[[],["result",4,[["roles",3]]]],[[],["result",4,[["insertableuser",3]]]],[[],["result",4,[["updateableuser",3]]]],[[],["result",4,[["login",3]]]],[[["theme",4]],["isnull",4]],[[["usersettings",3]],["isnull",4]],[[["userid",3]],["isnull",4]],[[["roles",3]],["isnull",4]],[[["role",4],["role",4]],["bool",0]],[[["userid",3],["userid",3]],["bool",0]],[[["roles",3],["roles",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["theme",4],["formatter",3]],["result",6]],[[["defaultvideoquality",4],["formatter",3]],["result",6]],[[["usersettings",3],["formatter",3]],["result",6]],[[["role",4],["formatter",3]],["result",6]],[[["userid",3],["formatter",3]],["result",6]],[[["roles",3],["formatter",3]],["result",6]],[[["user",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transaction",6],["str",0]]],[[["transaction",6]]],[[["transaction",6]]],[[["transaction",6],["userid",3]]],[[["user",3],["transaction",6]]],[[["user",3],["str",0]],["bool",0]],[[["string",3],["string",3]],["string",3]],null,[[["insertableuser",3],["transaction",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["login",3],["transaction",6]]],null,[[["login",3],["transaction",6]]],[[["userid",3],["userid",3]],["bool",0]],[[["roles",3],["roles",3]],["bool",0]],[[["transaction",6]]],null,null,null,null,null,null,[[["userid",3]],["option",4]],[[["user",3]],["roles",3]],null,null,[[["theme",4]],["result",4]],[[["defaultvideoquality",4]],["result",4]],[[["usersettings",3]],["result",4]],[[["role",4]],["result",4]],[[["userid",3]],["result",4]],[[["roles",3]],["result",4]],[[["user",3],["transaction",6],["string",3]]],[[["transaction",6],["userid",3],["i64",0]]],[[["transaction",6],["string",3],["string",3]]],[[["theme",4]],["usize",0]],[[["userid",3]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["sqlitetypeinfo",3]],[[]],[[]],[[]],[[["updateableuser",3],["transaction",6],["userid",3]]],null,null,null,[[["string",3],["string",3],["string",3]],["bool",0]],[[["string",3]],["result",4,[["userid",3],["autherror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["str",0]]],"p":[[3,"Asset"],[3,"InsertableAsset"],[3,"CompactMediafile"],[3,"Episode"],[3,"EpisodeWrapper"],[3,"InsertableEpisode"],[3,"UpdateEpisode"],[4,"AuthError"],[4,"DatabaseError"],[13,"DatabaseError"],[3,"Genre"],[3,"GenreMedia"],[3,"InsertableGenre"],[3,"InsertableGenreMedia"],[4,"MediaType"],[3,"Library"],[3,"InsertableLibrary"],[3,"Media"],[3,"InsertableMedia"],[3,"UpdateMedia"],[3,"MediaFile"],[3,"InsertableMediaFile"],[3,"UpdateMediaFile"],[3,"Movie"],[3,"Progress"],[8,"QueryExt"],[3,"SqlitePool"],[3,"Season"],[3,"InsertableSeason"],[3,"UpdateSeason"],[3,"TVShow"],[3,"Roles"],[4,"Theme"],[4,"DefaultVideoQuality"],[4,"Role"],[3,"User"],[3,"UserSettings"],[3,"UserID"],[3,"InsertableUser"],[3,"UpdateableUser"],[3,"Login"],[13,"Resolution"]]},\
"dim":{"doc":"Dim is a media manager written in rust. It uses Diesel as …","t":[2,14,0,0,0,0,2,2,0,14,0,0,0,0,2,5,0,0,0,0,14,14,0,6,6,7,6,5,5,13,13,13,4,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,4,3,3,3,8,8,3,8,4,13,13,13,13,13,13,13,13,6,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,10,11,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,10,10,12,10,11,11,11,11,11,11,12,12,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,10,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,8,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,11,11,11,11,11,11,0,11,11,11,10,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,5,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,17,17,17,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,4,13,11,11,11,11,11,11,11,0,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,5,5,0,5,5,3,11,11,12,11,11,11,11,11,11,12,11,12,12,0,11,5,5,5,5,11,5,11,12,12,5,12,12,12,11,5,12,11,11,11,11,12,11,5,5,5,5,0,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,12,2,8,3,10,11,11,0,11,11,11,0,5,11,5,11,5,11,10,0,5,5,5,11,11,0,11,11,13,3,4,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,4,13,13,13,3,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,13,13,3,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,3,3,3,17,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5,5,13,4,4,13,8,13,13,13,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["GlobalSettings","balanced_or_tree","core","errors","external","fetcher","get_global_settings","init_global_settings","inspect","json","logger","reactor","routes","scanner","set_global_settings","setup_logging","stream_tracking","streaming","tree","utils","warp_try","warp_unwrap","websocket","DbConnection","EventTx","METADATA_PATH","StateManager","run_scanners","warp_core","CookieError","DatabaseError","DatabaseError","DimError","ErrorStatusCode","ExternalSearchError","FFProbeCtxFailed","FileDoesNotExist","FileIsCorrupt","GidParseError","IOError","InternalServerError","InternalServerError","InvalidCredentials","InvalidMediaType","InvalidProfile","InvalidRequest","LibraryNotFound","MediafileRouteError","MissingFieldInBody","NoMediaFileFound","NoToken","NoneError","NotFoundError","OtherNightfall","ProcFailed","ScannerError","SessionDoesntExist","StreamingError","StreamingErrors","Unauthenticated","Unauthorized","UnknownError","UnsupportedFile","UploadFailed","UserNotFound","UsernameNotAvailable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","into","into","into_response","into_response","serialize","serialize","source","status_code","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","description","description","0","0","0","DeserializationError","Error","ExternalActor","ExternalEpisode","ExternalMedia","ExternalQuery","ExternalQueryShow","ExternalSeason","IntoQueryShow","MediaSearchType","Movie","NoEpisodesFound","NoGenreFound","NoResults","NoSeasonsFound","OtherError","ReachedMaxTries","RemoteApiError","Result","Timeout","Tv","as_query_show","backdrops","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","character","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","duration","duration","episode_number","episodes_for_season","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","external_id","external_id","external_id","external_id","filename","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","genres","get_hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_query_show","mock","name","ne","ne","ne","ne","other","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","posters","posters","profile_path","rating","release_date","search","search_by_id","season_number","seasons_for_id","serialize","serialize","serialize","serialize","serialize","serialize","stills","title","title","title","title_or_episode","tmdb","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","body","code","error","id","id","id","message","query","season","year","CombinedExtractor","FilenameMetadata","Metadata","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","episode","eq","equivalent","fmt","from","from","from_str","from_str","get_hash","hash","init","init","into","into","name","ne","season","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","year","MockProvider","borrow","borrow_mut","cast","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","search","search_by_id","to_owned","try_from","try_into","type_id","vzip","APP_USER_AGENT","MetadataProviderOf","Movies","TMDBMetadataProvider","TMDB_BASE_URL","TvShows","as_query_show","as_query_show","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","episodes_for_season","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_query_show","into_query_show","movies","new","provider","search","search_by_id","seasons_for_id","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tv_shows","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","insert_into_queue","ResultExt","inspect_err","RequestLogger","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","new","on_response","to_owned","try_from","try_into","type_id","vzip","Error","Reactor","ReactorCore","borrow","borrow_mut","deref","deref_mut","drop","from","handler","init","into","new","react","react","register","try_from","try_into","type_id","vzip","Error","EventReactor","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","react","try_from","try_into","type_id","vzip","with_websocket","auth","dashboard","general","host","invites","library","media","mediafile","rematch_media","settings","statik","stream","tv","user","admin_exists","filters","login","register","login","register","banners","dashboard","filters","banners","dashboard","enumerate_directory","filters","get_directory_structure","search","get_directory_structure","search","admin_exists","delete_invite","generate_invite","get_all_invites","filters","get_all_library","get_all_unmatched_media","get_self","library_delete","library_get","library_post","get_all_of_library","get_all_unmatched_media","library_delete","library_get","library_get_self","library_post","API_KEY","MOVIES_PROVIDER","TV_PROVIDER","delete_media_by_id","filters","get_media_by_id","get_media_files","get_mediafile_tree","map_progress","tmdb_search","update_media_by_id","delete_media_by_id","get_media_by_id","get_media_files","get_mediafile_tree","map_progress","tmdb_search","update_media_by_id","Error","NoMediafiles","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","filters","fmt","fmt","from","get_mediafile_info","init","into","rematch_mediafile","serialize","status_code","to_owned","to_string","try_from","try_into","type_id","vzip","get_mediafile_info","rematch_mediafile","filters","rematch_media","rematch_media_by_id","GlobalSettings","borrow","borrow_mut","cache_dir","clone","clone_into","default","deref","deref_mut","deserialize","disable_auth","drop","enable_hwaccel","enable_ssl","filters","from","get_global_settings","get_user_settings","http_get_global_settings","http_set_global_settings","init","init_global_settings","into","metadata_dir","port","post_user_settings","priv_key","quiet_boot","secret_key","serialize","set_global_settings","ssl_cert","to_owned","try_from","try_into","type_id","verbose","vzip","get_global_settings","get_user_settings","post_user_settings","set_global_settings","filters","get_image","react_routes","dist_static","get_image","react_routes","ui_manifest","create_audio","create_subtitles","create_video","filters","get_chunk","get_init","get_subtitle","get_subtitle_ass","kill_session","return_manifest","return_virtual_manifest","session_get_stderr","should_client_hard_seek","try_create_dstream","get_chunk","get_init","get_subtitle","get_subtitle_ass","kill_session","return_manifest","return_virtual_manifest","session_get_stderr","should_client_hard_seek","delete_episode_by_id","delete_season_by_id","filters","get_season_by_id","get_season_episodes","get_tv_seasons","patch_episode_by_id","patch_season_by_id","delete_episode_by_id","delete_season_by_id","get_season_by_id","get_season_episodes","get_tv_seasons","patch_episode_by_id","patch_season_by_id","change_password","change_username","delete","upload_avatar","whoami","0","1","Error","MediaMatcher","WorkUnit","batch_match","borrow","borrow_mut","daemon","deref","deref_mut","drop","error","format_path","from","get_subfiles","init","insert_mediafiles","into","match_to_id","movie","parse_filenames","start","start_custom","try_from","try_into","tv_show","type_id","vzip","DatabaseError","FsWatcher","FsWatcherError","NotifyError","async_watch","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","init","init","into","into","new","source","start_daemon","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","DatabaseError","Error","EventDispatch","InvalidExternalId","LibraryNotFound","MediafileError","MovieScanner","TvScanner","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","from","from","from","init","into","serialize","source","to_owned","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","BackdropInsert","ChildCleanup","ChildrenCount","CoupleGenre","Error","GenreDecouple","GetOrInsertGenre","GetOrInsertMedia","MovieMatcher","PosterInsert","UpdateMediafile","asset_from_url","batch_match","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","match_to_id","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","BackdropInsert","ChildCleanup","ChildrenCount","CoupleGenre","EpisodeNotFound","Error","GenreDecouple","GetOrInsertEpisode","GetOrInsertGenre","GetOrInsertMedia","GetOrInsertMediaEpisode","GetOrInsertSeason","GetSeasonId","GetTvId","PosterInsert","SeasonNotFound","TvMatcher","UpdateMediafile","batch_match","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","match_to_id","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Audio","ContentType","StreamTracking","Subtitle","Video","VirtualManifest","args","bandwidth","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chunk_path","clone","clone","clone","clone_into","clone_into","clone_into","codecs","compile","compile","compile_only","content_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","duration","fmt","fmt","fmt","from","from","from","generate_sids","get_for_gid","id","init","init","init","init_seg","insert","into","into","into","is_default","is_direct","kill","kill_all","label","lang","mime","new","serialize","serialize","set_args","set_bandwidth","set_codecs","set_content_type","set_direct","set_duration","set_id","set_is_default","set_label","set_lang","set_mime","set_sid","set_target_duration","target_duration","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AVC1_LEVELS","Avc1Level","FFMPEG_BIN","FFPROBE_BIN","Quality","STREAMING_SESSION","VIDEO_QUALITIES","bitrate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","ffcheck","ffprobe","from","from","from","from","from","get_avc1_tag","get_qualities","height","init","init","init","init","init","into","into","into","into","into","level","level_to_tag","macro_blocks_rate","max_bitrate","max_frame_size","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Disposition","Error","FFPStream","FFProbeCtx","FfprobeError","Stream","Tags","bit_rate","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bps_eng","channel_layout","channels","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","codec_name","codec_time_base","codec_type","coded_height","coded_width","color_range","color_space","comment","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","display_aspect_ratio","disposition","drop","drop","drop","drop","drop","drop","dub","duration","duration_ts","eq","eq","eq","eq","equivalent","find_by_type","fmt","fmt","fmt","fmt","fmt","fmt","forced","from","from","from","from","from","from","get_audio_lang","get_bitrate","get_codec","get_container","get_container_bitrate","get_duration","get_height","get_language","get_meta","get_ms","get_primary","get_primary_channels","get_primary_codec","get_title","get_video_codec","get_video_lang","get_video_profile","get_width","has_b_frames","hearing_impaired","height","index","init","init","init","init","init","init","into","into","into","into","into","into","is_avc","is_codec_type","is_corrupt","karaoke","language","level","lyrics","ne","ne","ne","ne","new","original","pix_fmt","profile","sample_rate","serialize","serialize","serialize","serialize","tags","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","visual_impaired","vzip","vzip","vzip","vzip","vzip","vzip","width","Directory","Entry","File","borrow","borrow_mut","build_with","compress","deref","deref_mut","drop","eq","equivalent","fmt","from","init","insert","into","ne","new","serialize","try_from","try_into","type_id","vzip","0","files","folder","channels_pretty","codec_pretty","ffpath","lang_from_iso639","quality_to_label","secs_to_pretty","ts_to_xml","Authenticate","ClientActions","CtrlEvent","Forget","IntoCtrlEvent","SendAll","SendTo","Track","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","event_socket","from","from","init","init","into","into","into_ctrl_event","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","token","0","addr","addr","addr","auth","message","sink"],"q":["dim","","","","","","","","","","","","","","","","","","","","","","","dim::core","","","","","","dim::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::errors::DimError","","","","","","","dim::errors::StreamingErrors","","","dim::externaldim::external::Error","","","","","","","","","","","dim::external::filename","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::external::mock","","","","","","","","","","","","","","","","","","","","dim::external::tmdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::fetcher","dim::inspect","","dim::logger","","","","","","","","","","","","","","","","","","dim::reactor","","","","","","","","","","","","","","","","","","","","dim::reactor::handler","","","","","","","","","","","","","","","","","dim::routes","","","","","","","","","","","","","","dim::routes::auth","","","","dim::routes::auth::filters","","dim::routes::dashboard","","","dim::routes::dashboard::filters","","dim::routes::general","","","","dim::routes::general::filters","","dim::routes::host","dim::routes::invites","","","dim::routes::library","","","","","","","dim::routes::library::filters","","","","","","dim::routes::media","","","","","","","","","","","dim::routes::media::filters","","","","","","","dim::routes::mediafile","","","","","","","","","","","","","","","","","","","","","","","","","dim::routes::mediafile::filters","","dim::routes::rematch_media","","dim::routes::rematch_media::filters","dim::routes::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::routes::settings::filters","","","","dim::routes::statik","","","dim::routes::statik::filters","","","","dim::routes::stream","","","","","","","","","","","","","","dim::routes::stream::filters","","","","","","","","","dim::routes::tv","","","","","","","","dim::routes::tv::filters","","","","","","","dim::routes::user","","","","","dim::scanner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::scanner::daemon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::scanner::daemon::FsWatcherError","","dim::scanner::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::scanner::error::Error","","","","","","dim::scanner::movie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::scanner::movie::Error","","","","","","","","","dim::scanner::tv_show","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::scanner::tv_show::Error","","","","","","","","","","","","","","dim::stream_tracking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::streaming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::streaming::ffprobedim::tree","","","","","","","","","","","","","","","","","","","","","","","","dim::tree::Entry","","","dim::utils","","","","","","","dim::websocket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dim::websocket::ClientActions","dim::websocket::CtrlEvent","","","","","",""],"d":["","Source: https://github.com/seanmonstar/warp/issues/619 …","Module contains our core initialization logic.","Module contains all the error definitions used in dim, and …","Module contains our external api interfaces","Contains the code for fetching assets like posters and …","","","Inspect api for Result type","Construct a <code>serde_json::Value</code> from a JSON literal.","Contains our custom logger for rocket","Sqlite CDC implementation","Contains all of the routes exposed by the webapi. This …","New generation scanner infrastructure. Module contains all …","","Function builds a logger drain that drains to a json file …","Contains the fairing which tracks streams across rest api","Contains all the logic needed for streaming and on-the-fly …","Tree-like structure for representing directories of files.","Various utilities","","","Websocket related logic.","","","Path to where metadata is stored and should be fetched to.","","Function dumps a list of all libraries in the database and …","","An error has occured while parsing cookies: {0:?}","A database error occured: {description}.","A database error occured: {0}","","","Couldn’t find the tmdb id provided.","Failed to create a ffprobe context","The requested file does not exist on disk.","It appears that the file is corrupted","Could not parse the gid","Io Error","Internal server error.","InternalServerError“","Invalid credentials.","Invalid Media type supplied.","The video profile requested doesnt exist","Invalid request","Library does not exist.","Error occured in the <code>/api/v1/mediafile</code> routes.","Failed to deserialize request body: {description:?}.","No mediafile found: {0}","Invite token required.","Some function returned none.","The requested resource does not exist.","A error with nightfall has occured","Failed to start process","Error has occured when matching: {0:?}","Requested session doesnt exist","An error in the streaming module has occured","","Authentication is required for this route.","User has no permission to access this route.","Some unknown error has occured.","Unsupported file type.","Upload failed.","User does not exist","Requested username is not available.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The API response could not be deserialized: {error}","","","","","Trait that must be implemented by external metadata agents …","Trait must be implemented by all external metadata agents …","","","","","No episodes found for the id supplied: id={id} …","Could not find genre with supplied id: {id}","No results are found: query={query} year={year:?}","No seasons found for the id supplied: {id}","Other error, usually contains an error that shouldn’t …","Max retry count reached","The remote API returned an error ({code}): {message}","","The request timeouted","","Upcast <code>self</code> into <code>ExternalQueryShow</code>. It is important that …","A list of backdrops for this media object.","","","","","","","","","","","","","Get all actors for a media by external id. Actors must be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The description or overview of this media object.","The description of this season.","","","","","","","","","","","","","The duration for this media object.","","","Get all episodes for a season ranked in order of the …","","","","","","","","","","String representation of the id for this media object.","String representation of the id for this season object.","","","Module contains a common interface for extracting and …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A list of genres for this media object.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A list of posters for this media object.","A list of posters for this season object.","","The rating for this media object normalized in the range 0 …","The release date or first air date of this media object.","Search by title and year. This must return a Vec of …","Search by external id. This must return a singular …","The season number for this season.","Get all seasons for an external id. Seasons must be ranked …","","","","","","","","The title of this media object.","The title of this season.","","","A TMDB client implementation with request coalescing and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A special filename metadata extractor that combines …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","The User-Agent is generated from the package name “dim”…","An instance of TMDBMetadataProvider with a generic …","Used to key [TMDBMetadataProviderRef] to search for …","TMDB Metadata Provider produces <code>ExternalQuery</code> …","The base url used to access TMDB;","Used to key [TMDBMetadataProviderRef] to search for TV …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","curry this metadata provider to supply search results for …","Create a new metadata provider instance with this API key.","","","","","","","","","","","","","","curry this metadata provider to supply search results for …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","This module contains all docs and APIs related to …","","","This module contains the docs and implementation of …","This module contains various routes used to deal with …","","","","","","","","","This module contains all docs and APIs related to users …","","","POST <code>/api/v1/auth/login</code>","POST <code>/api/v1/auth/register</code>","","","","","","","","","","","","","","GET <code>/api/v1/host/admin_exists</code>","DELETE <code>/api/v1/auth/token/:token</code>","POST <code>/api/v1/auth/new_invite</code>","GET <code>/api/v1/auth/invites</code>","","Method mapped to <code>GET /api/v1/library/&lt;id&gt;/media</code> returns …","Method mapped to <code>GET</code> /api/v1/library//unmatched` returns a …","Method mapped to <code>GET /api/v1/library/&lt;id&gt;</code> returns info …","Method mapped to <code>DELETE /api/v1/library/&lt;id&gt;</code> is used to …","GET <code>/api/v1/library</code>","Method maps to <code>POST /api/v1/library</code>, it adds a new library …","","","","","","","","","","Method mapped to <code>DELETE /api/v1/media/&lt;id&gt;</code> is used to …","","Method mapped to <code>GET /api/v1/media/&lt;id&gt;</code> returns info about …","","GET <code>/api/v1/media/&lt;id&gt;/tree</code>","Method mapped to <code>POST /api/v1/media/&lt;id&gt;/progress</code> is used …","Method mapped to <code>GET /api/v1/media/tmdb_search</code> is used to …","Method mapped to <code>PATCH /api/v1/media/&lt;id&gt;</code> is used to edit …","","","","","","","","","Supplied no mediafiles when rematching.","","","","","","","","","","","Returns the argument unchanged.","Method mapped to <code>GET /api/v1/mediafile/&lt;id&gt;</code> is used to get …","","Calls <code>U::from(self)</code>.","Method mapped to <code>PATCH /api/v1/mediafile/match</code> used to …","","","","","","","","","","","","FIXME: Merge this function into rematch_mediafile as …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Method mapped to <code>/api/v1/stream/&lt;id&gt;/data/&lt;chunk..&gt;</code> …","Method mapped to <code>/api/v1/stream/&lt;id&gt;/data/init.mp4</code> returns …","Method mapped to <code>/api/v1/stream/&lt;id&gt;/data/stream.vtt</code> …","Method mapped to <code>/api/v1/stream/&lt;id&gt;/data/stream.ass</code> …","Method mapped to <code>/api/v1/stream/&lt;gid&gt;/state/kill</code> will kill …","Method mapped to <code>/api/v1/stream/&lt;gid&gt;/manifest.mpd</code> …","Method mapped to <code>GET /api/v1/stream/&lt;id&gt;/manifest?&lt;gid&gt;</code> …","Method mapped to <code>/api/v1/stream/&lt;gid&gt;/state/get_stderr</code> …","Method mapped to …","","","","","","","","","","","Method mapped to <code>DELETE /api/v1/episode/&lt;id&gt;</code> allows you to …","Method mapped to <code>DELETE /api/v1/tv/&lt;id&gt;/season/&lt;season_num&gt;</code>…","","Method mapped to <code>GET /api/v1/tv/&lt;id&gt;/season/&lt;season_num&gt;</code> …","Method mapped to <code>GET /api/v1/episode/&lt;id&gt;</code> returns …","Method mapped to <code>GET /api/v1/tv/&lt;id&gt;/season</code> returns all …","TODO: Move all of these into a unified update interface …","Method mapped to <code>PATCH /api/v1/tv/&lt;id&gt;/season/&lt;season_num&gt;</code> …","","","","","","","","POST <code>/api/v1/user/password</code>","POST <code>/api/v1/user/username</code>","DELETE <code>/api/v1/user</code>","POST <code>/api/v1/user/avatar</code>","GET <code>/api/v1/user</code>","","","","Trait that must be implemented by a media matcher. …","","","","","","","","","","Function formats the path where assets are stored.","Returns the argument unchanged.","Function recursively walks the paths passed and returns …","","","Calls <code>U::from(self)</code>.","Match a WorkUnit to a specific external id.","","","","","","","","","","A database error has occured: {0:?}","","","A error with notify has occured“: {0:?}","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Database error: {0:?}","","Failed to dispatch websocket event: {0:?}","Provided external id not found by provider.","Library supplied doesnt exist: {0:?}","Mediafile insert error: {0:?}","Movie scanner error: {0:?}","Tv show scanner error: {0:?}","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Failed to insert backdrop into database: {0:?}","Failed to cleanup child-less parent: {0:?}","Failed to get children count for movie: {0:?}","Failed to attach genre to media object: {0:?}","","Failed to decouple genres from media: {0:?}","Failed to create or get genre: {0:?}","Failed to insert or get media object: {0:?}","","Failed to insert poster into database: {0:?}","Failed to update mediafile to point to new parent: {0:?}","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Failed to insert backdrop into database: {0:?}","Failed to cleanup child-less parent: {0:?}","Failed to get children count for movie: {0:?}","Failed to attach genre to media object: {0:?}","Episode not found","","Failed to decouple genres from media: {0:?}","Failed to insert episode object: {0:?}","Failed to create or get genre: {0:?}","Failed to insert or get tv object: {0:?}","Failed to insert media object for episode: {0:?}","Failed to insert or get season: {0:?}","Failed to get season id for episode: {0:?}","Failed to get tvshowid for season: {0:?}","Failed to insert poster into database: {0:?}","Season not found","","Failed to update mediafile to point to new parent: {0:?}","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ffcheck - Check if “ffmpeg” and “ffprobe” are …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ffprobe exited early with an error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a entry which can either be a directory with …","","","","Helper which can turn a collection of values into a tree. …","Changes the root to the first folder that has children.","","","","","","","Returns the argument unchanged.","","Method inserts a value in the current entry by recursively …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0,0,1,2,2,2,2,1,1,2,1,1,2,2,1,1,1,2,1,1,1,2,2,1,2,1,0,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,2,1,1,1,1,1,1,1,1,2,2,2,2,1,2,1,2,1,2,1,2,1,3,1,2,1,2,1,2,1,2,1,2,1,2,4,5,6,7,8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,15,14,14,14,14,14,14,14,0,14,15,16,17,14,17,18,19,20,15,14,17,18,19,20,15,21,20,14,17,18,19,20,15,14,17,18,19,20,15,15,17,18,19,14,17,18,19,20,15,14,17,18,19,20,15,17,18,19,17,18,19,20,15,14,17,18,19,20,15,17,19,19,22,17,18,19,20,15,18,19,20,15,17,18,19,20,0,14,14,17,18,19,20,15,15,14,17,18,19,20,15,17,15,15,14,17,18,19,20,15,14,17,18,19,20,15,16,0,20,17,18,19,20,14,17,18,19,20,15,17,18,20,17,17,21,21,18,22,14,17,18,19,20,15,19,17,18,19,19,0,14,17,18,19,20,15,14,15,14,17,18,19,20,15,14,17,18,19,20,15,14,17,18,19,20,15,14,17,18,19,20,15,23,24,25,24,26,27,28,25,29,27,29,0,0,0,30,31,30,31,31,31,30,31,30,31,30,31,31,31,31,31,30,31,32,30,31,31,30,31,30,31,31,31,31,31,30,31,30,31,30,31,30,31,31,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,0,34,34,35,36,37,34,35,36,37,34,34,35,35,35,36,37,34,35,36,37,34,35,36,37,34,34,34,35,36,37,34,35,36,37,34,35,36,37,34,34,34,35,35,34,34,34,34,35,35,36,37,34,35,36,37,34,35,35,36,37,34,35,36,37,34,0,0,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,0,0,41,41,41,41,41,41,0,41,41,41,40,41,41,41,41,41,41,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,0,43,43,43,0,43,43,0,43,43,43,43,43,43,43,43,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,0,44,0,0,0,0,44,0,44,44,44,0,44,44,44,44,0,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,45,0,0,0,46,45,45,0,45,45,45,0,0,45,0,45,0,45,46,0,0,0,0,45,45,0,45,45,47,0,0,47,0,48,47,48,47,48,47,48,47,48,47,47,47,48,47,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,49,50,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,53,54,55,56,57,58,58,58,58,0,58,58,58,0,58,58,0,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,58,58,59,58,59,58,59,59,58,58,59,58,58,59,58,59,58,59,58,59,60,61,62,63,64,65,66,67,68,69,69,69,69,69,0,69,69,69,69,69,69,69,69,69,69,0,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,69,69,70,69,70,69,70,70,69,69,70,69,69,70,69,70,69,70,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,0,0,85,85,0,86,86,87,85,86,87,85,86,86,87,85,86,87,85,86,86,87,86,87,86,87,87,85,86,87,85,86,87,85,86,86,85,85,86,87,85,86,87,87,86,87,85,86,86,87,87,85,86,86,86,87,87,86,86,86,86,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,85,86,85,87,85,86,87,85,86,87,85,86,87,85,86,0,0,0,0,0,0,0,88,89,90,91,88,92,89,90,91,88,92,88,92,88,92,89,89,90,90,91,91,88,92,89,90,91,88,92,89,90,91,88,92,0,0,89,90,91,88,92,0,0,88,89,90,91,88,92,89,90,91,88,92,92,0,92,92,92,88,92,92,89,90,91,88,92,89,90,91,88,92,89,90,91,88,92,89,90,91,88,92,0,0,0,0,93,0,0,94,95,93,96,94,97,98,95,93,96,94,97,98,97,94,94,93,96,94,97,98,93,96,94,97,98,94,94,94,94,94,94,94,98,96,94,97,98,95,93,96,94,97,98,95,93,96,94,97,98,96,94,97,98,94,94,95,93,96,94,97,98,98,94,94,96,94,97,98,98,96,93,93,96,94,97,98,98,95,93,96,94,97,98,96,94,94,96,96,96,96,94,95,96,96,96,96,94,96,96,96,96,94,98,94,94,95,93,96,94,97,98,95,93,96,94,97,98,94,96,96,98,97,94,98,96,94,97,98,95,98,94,94,94,96,94,97,98,94,97,93,96,94,97,98,93,95,93,96,94,97,98,95,93,96,94,97,98,95,93,96,94,97,98,98,95,93,96,94,97,98,94,99,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,101,101,0,0,0,0,0,0,0,102,0,0,103,0,103,103,103,103,102,103,102,103,102,103,102,102,103,102,0,103,102,103,102,103,102,104,103,102,103,102,103,102,103,102,105,106,107,108,109,107,109,107],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",0]]],null,null,null,null,null,null,null,null,null,null,null,[[["eventtx",6]]],[[["eventtx",6],["statemanager",6],["handle",3],["u16",0],["unboundedreceiver",3,[["string",3]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["dimerror",4]],["dimerror",4]],[[["streamingerrors",4]],["streamingerrors",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["dimerror",4],["formatter",3]],["result",6]],[[["dimerror",4],["formatter",3]],["result",6]],[[["streamingerrors",4],["formatter",3]],["result",6]],[[["streamingerrors",4],["formatter",3]],["result",6]],[[],["dimerror",4]],[[["error",3]],["dimerror",4]],[[["databaseerror",4]],["dimerror",4]],[[["error",4]],["dimerror",4]],[[["error",4]],["dimerror",4]],[[["error",4]],["dimerror",4]],[[["streamingerrors",4]],["dimerror",4]],[[]],[[["error",4]],["streamingerrors",4]],[[]],[[["nightfallerror",4]],["streamingerrors",4]],[[["error",3]],["streamingerrors",4]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["dimerror",4]],["response",6]],[[["streamingerrors",4]],["response",6]],[[["dimerror",4]],["result",4]],[[["streamingerrors",4]],["result",4]],[[["dimerror",4]],["option",4,[["error",8]]]],[[["",0]],["statuscode",3]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["externalqueryshow",8]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["error",4]],["error",4]],[[["externalmedia",3]],["externalmedia",3]],[[["externalseason",3]],["externalseason",3]],[[["externalepisode",3]],["externalepisode",3]],[[["externalactor",3]],["externalactor",3]],[[["mediasearchtype",4]],["mediasearchtype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["mediasearchtype",4],["mediasearchtype",4]],["ordering",4]],[[],["externalmedia",3]],[[],["externalseason",3]],[[],["externalepisode",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,null,null,[[],["result",4,[["externalmedia",3]]]],[[],["result",4,[["externalseason",3]]]],[[],["result",4,[["externalepisode",3]]]],[[],["result",4,[["externalactor",3]]]],[[],["result",4,[["mediasearchtype",4]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,null,[[["",0],["str",0],["u64",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["externalmedia",3],["externalmedia",3]],["bool",0]],[[["externalseason",3],["externalseason",3]],["bool",0]],[[["externalepisode",3],["externalepisode",3]],["bool",0]],[[["externalactor",3],["externalactor",3]],["bool",0]],[[["mediasearchtype",4],["mediasearchtype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,null,null,[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["externalmedia",3],["formatter",3]],["result",6]],[[["externalseason",3],["formatter",3]],["result",6]],[[["externalepisode",3],["formatter",3]],["result",6]],[[["externalactor",3],["formatter",3]],["result",6]],[[["mediasearchtype",4],["formatter",3]],["result",6]],[[["mediasearchtype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0],["",0]],["u64",0]],[[["mediasearchtype",4],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3]],["option",4,[["arc",3,[["externalqueryshow",8]]]]]],null,null,[[["externalmedia",3],["externalmedia",3]],["bool",0]],[[["externalseason",3],["externalseason",3]],["bool",0]],[[["externalepisode",3],["externalepisode",3]],["bool",0]],[[["externalactor",3],["externalactor",3]],["bool",0]],[[],["error",4]],[[["externalmedia",3],["externalmedia",3]],["option",4,[["ordering",4]]]],[[["externalseason",3],["externalseason",3]],["option",4,[["ordering",4]]]],[[["externalepisode",3],["externalepisode",3]],["option",4,[["ordering",4]]]],[[["externalactor",3],["externalactor",3]],["option",4,[["ordering",4]]]],[[["mediasearchtype",4],["mediasearchtype",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,[[["",0],["str",0],["option",4,[["i32",0]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[["",0],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["error",4]],["result",4]],[[["externalmedia",3]],["result",4]],[[["externalseason",3]],["result",4]],[[["externalepisode",3]],["result",4]],[[["externalactor",3]],["result",4]],[[["mediasearchtype",4]],["result",4]],null,null,null,null,[[["externalepisode",3]],["string",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["metadata",3]],["metadata",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],null,[[["metadata",3],["metadata",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["metadata",3],["formatter",3]],["result",6]],[[]],[[]],[[["str",0]],["option",4,[["metadata",3]]]],[[["str",0]],["option",4,[["metadata",3]]]],[[["",0],["",0]],["u64",0]],[[["metadata",3],["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,[[["metadata",3],["metadata",3]],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["mockprovider",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["mockprovider",3]],["mockprovider",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["mockprovider",3],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["mockprovider",3],["str",0],["option",4,[["i32",0]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["mockprovider",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["metadataproviderof",3,[["tvshows",3]]]],["option",4,[["externalqueryshow",8]]]],[[["metadataproviderof",3]],["option",4,[["externalqueryshow",8]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["metadataproviderof",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["tmdbmetadataprovider",3]],["tmdbmetadataprovider",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["metadataproviderof",3,[["tvshows",3]]],["str",0],["u64",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["metadataproviderof",3,[["",26,[["assocmediatypeconst",8],["send",8],["sync",8]]]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["arc",3,[["metadataproviderof",3]]]],["option",4,[["arc",3,[["externalqueryshow",8]]]]]],[[["arc",3,[["metadataproviderof",3,[["tvshows",3]]]]]],["option",4,[["arc",3,[["externalqueryshow",8]]]]]],[[["tmdbmetadataprovider",3]],["metadataproviderof",3,[["movies",3]]]],[[["str",0]],["tmdbmetadataprovider",3]],null,[[["metadataproviderof",3],["str",0],["option",4,[["i32",0]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["metadataproviderof",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["metadataproviderof",3,[["tvshows",3]]],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tmdbmetadataprovider",3]],["metadataproviderof",3,[["tvshows",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[["string",3],["string",3],["bool",0]]],null,[[],["result",4]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["requestlogger",3]],["requestlogger",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[],["requestlogger",3]],[[["requestlogger",3],["info",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],null,[[],["usize",0]],[[]],[[],["reactorcore",3]],[[["",0],["event",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["reactorcore",3]]],[[["reactorcore",3],["ownedmutexguard",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[["sqlitepool",3]],["eventreactor",3]],[[["eventreactor",3],["event",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["eventreactor",3],["eventtx",6]],["eventreactor",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["dbconnection",6]]],null,[[["login",3],["dbconnection",6]]],[[["login",3],["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6],["user",3]]],[[["dbconnection",6],["user",3],["handle",3]]],null,[[["dbconnection",6]]],[[["dbconnection",6],["handle",3]]],[[["asref",8,[["path",3]]]],["result",6,[["vec",3,[["string",3]]]]]],null,[[["pathbuf",3],["user",3]]],[[["dbconnection",6],["option",4,[["string",3]]],["option",4,[["i32",0]]],["option",4,[["i32",0]]],["option",4,[["string",3]]],["option",4,[["bool",0]]],["user",3]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6],["user",3],["string",3]]],[[["dbconnection",6],["user",3]]],[[["dbconnection",6],["user",3]]],null,[[["dbconnection",6],["i64",0],["user",3]]],[[["dbconnection",6],["i64",0],["user",3],["option",4,[["string",3]]]]],[[["dbconnection",6],["i64",0],["user",3]]],[[["i64",0],["user",3],["dbconnection",6]]],[[["dbconnection",6],["user",3]]],[[["dbconnection",6],["insertablelibrary",3],["eventtx",6],["user",3]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6],["eventtx",6]]],null,null,null,[[["dbconnection",6],["i64",0],["user",3]]],null,[[["dbconnection",6],["i64",0],["user",3]]],[[["dbconnection",6],["i64",0]]],[[["dbconnection",6],["i64",0]]],[[["dbconnection",6],["i64",0],["i64",0],["user",3]]],[[["string",3],["option",4,[["i32",0]]],["string",3],["user",3]]],[[["i64",0],["updatemedia",3],["user",3],["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],null,[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[["dbconnection",6],["i64",0],["user",3]]],[[],["usize",0]],[[]],[[["dbconnection",6],["vec",3,[["i64",0]]],["string",3],["string",3]]],[[["error",4]],["result",4]],[[["error",4]],["statuscode",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],[[["dbconnection",6]]],[[["dbconnection",6]]],null,[[["dbconnection",6],["eventtx",6],["i64",0],["string",3],["string",3]]],[[["dbconnection",6],["eventtx",6]]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["globalsettings",3]],["globalsettings",3]],[[["",0],["",0]]],[[],["globalsettings",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["globalsettings",3]]]],null,[[["usize",0]]],null,null,null,[[]],[[],["globalsettings",3]],[[["dbconnection",6],["user",3]]],[[["user",3]]],[[["user",3],["globalsettings",3]]],[[],["usize",0]],[[["option",4,[["string",3]]]],["result",4,[["box",3,[["error",8]]]]]],[[]],null,null,[[["dbconnection",6],["user",3],["usersettings",3]]],null,null,null,[[["globalsettings",3]],["result",4]],[[["globalsettings",3]],["result",4,[["box",3,[["error",8]]]]]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],null,[[["tail",3],["option",4,[["u32",0]]],["option",4,[["u32",0]]],["string",3],["dbconnection",6],["bool",0]]],[[]],[[]],[[["dbconnection",6]]],[[]],[[]],[[["ffpstream",3],["mediafile",3],["streamtracking",3],["uuid",3],["statemanager",6]]],[[["ffpstream",3],["mediafile",3],["streamtracking",3],["uuid",3],["statemanager",6],["bool",0]]],[[["ffpstream",3],["mediafile",3],["streamtracking",3],["uuid",3],["statemanager",6],["usersettings",3],["bool",0]]],null,[[["statemanager",6],["string",3],["pathbuf",3]]],[[["statemanager",6],["string",3],["option",4,[["u32",0]]]]],[[["statemanager",6],["string",3]]],[[["statemanager",6],["string",3]]],[[["statemanager",6],["streamtracking",3],["uuid",3]]],[[["statemanager",6],["streamtracking",3],["user",3],["dbconnection",6],["uuid",3],["option",4,[["u64",0]]],["option",4,[["bool",0]]],["option",4,[["string",3]]]]],[[["statemanager",6],["streamtracking",3],["user",3],["dbconnection",6],["i64",0],["option",4,[["uuid",3]]],["bool",0]]],[[["statemanager",6],["streamtracking",3],["uuid",3]]],[[["statemanager",6],["streamtracking",3],["uuid",3],["u32",0]]],[[["ffpstream",3],["mediafile",3],["streamtracking",3],["uuid",3],["statemanager",6],["usersettings",3]]],[[["statemanager",6]]],[[["statemanager",6]]],[[["statemanager",6]]],[[["statemanager",6]]],[[["statemanager",6],["streamtracking",3]]],[[["dbconnection",6],["statemanager",6],["streamtracking",3]]],[[["dbconnection",6],["statemanager",6],["streamtracking",3]]],[[["statemanager",6],["streamtracking",3]]],[[["statemanager",6],["streamtracking",3]]],[[["dbconnection",6],["i64",0],["user",3]]],[[["dbconnection",6],["i64",0],["user",3]]],null,[[["dbconnection",6],["i64",0],["user",3]]],[[["dbconnection",6],["i64",0],["user",3]]],[[["dbconnection",6],["i64",0],["user",3]]],[[["dbconnection",6],["i64",0],["updateepisode",3],["user",3]]],[[["dbconnection",6],["i64",0],["updateseason",3],["user",3]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6]]],[[["dbconnection",6],["user",3],["string",3],["string",3]]],[[["dbconnection",6],["user",3],["string",3]]],[[["dbconnection",6],["user",3],["string",3]]],[[["dbconnection",6],["user",3],["formdata",3]]],[[["user",3],["dbconnection",6]]],null,null,null,null,null,[[["",0],["transaction",6],["arc",3,[["externalquery",8]]],["vec",3,[["workunit",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],null,[[["option",4,[["string",3]]]],["string",3]],[[]],[[],["vec",3,[["pathbuf",3]]]],[[],["usize",0]],[[["dbconnection",6],["i64",0],["vec",3]]],[[]],[[["",0],["transaction",6],["arc",3,[["externalquery",8]]],["workunit",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],null,[[],["vec",3]],[[["dbconnection",6],["i64",0],["eventtx",6],["arc",3,[["externalquery",8]]]]],[[["dbconnection",6],["i64",0],["vec",3],["eventtx",6],["mediatype",4],["arc",3,[["externalquery",8]]]]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[]],null,null,null,null,[[],["result",4,[["fswatchererror",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["fswatchererror",4],["formatter",3]],["result",6]],[[["fswatchererror",4],["formatter",3]],["result",6]],[[]],[[]],[[["databaseerror",4]],["fswatchererror",4]],[[["error",4]],["fswatchererror",4]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["dbconnection",6],["i64",0],["mediatype",4],["eventtx",6],["arc",3,[["externalquery",8]]]],["fswatcher",3]],[[["fswatchererror",4]],["option",4,[["error",8]]]],[[["fswatcher",3]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["arc",3,[["error",4]]]],["error",4]],[[["error",4]],["error",4]],[[["error",4]],["error",4]],[[]],[[],["usize",0]],[[]],[[["error",4]],["result",4]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",0]],["option",4,[["insertableasset",3]]]],[[["moviematcher",3],["transaction",6],["arc",3,[["externalquery",8]]],["vec",3,[["workunit",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["moviematcher",3]],["moviematcher",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["moviematcher",3],["transaction",6],["arc",3,[["externalquery",8]]],["workunit",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["error",4]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tvmatcher",3],["transaction",6],["arc",3,[["externalquery",8]]],["vec",3,[["workunit",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["tvmatcher",3]],["tvmatcher",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["tvmatcher",3],["transaction",6],["arc",3,[["externalquery",8]]],["workunit",3],["str",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["error",4]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["streamtracking",3]],["streamtracking",3]],[[["contenttype",4]],["contenttype",4]],[[["virtualmanifest",3]],["virtualmanifest",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["streamtracking",3],["uuid",3],["u64",0]]],[[["virtualmanifest",3],["xmlwriter",3],["u64",0]]],[[["streamtracking",3],["uuid",3],["u64",0],["vec",3,[["string",3]]]]],null,[[],["streamtracking",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["contenttype",4],["formatter",3]],["result",6]],[[["contenttype",4],["formatter",3]],["result",6]],[[["virtualmanifest",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["streamtracking",3],["uuid",3]]],[[["streamtracking",3],["uuid",3]]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[["streamtracking",3],["uuid",3],["virtualmanifest",3]]],[[]],[[]],[[]],null,null,[[["streamtracking",3],["statemanager",6],["uuid",3],["vec",3,[["string",3]]],["bool",0]]],[[["streamtracking",3],["statemanager",6],["uuid",3],["bool",0]]],null,null,null,[[["string",3],["string",3],["option",4,[["string",3]]],["contenttype",4]],["virtualmanifest",3]],[[["contenttype",4]],["result",4]],[[["virtualmanifest",3]],["result",4]],[[["virtualmanifest",3]],["virtualmanifest",3]],[[["virtualmanifest",3],["u64",0]],["virtualmanifest",3]],[[["virtualmanifest",3]],["virtualmanifest",3]],[[["virtualmanifest",3],["contenttype",4]],["virtualmanifest",3]],[[["virtualmanifest",3]],["virtualmanifest",3]],[[["virtualmanifest",3],["option",4,[["i32",0]]]],["virtualmanifest",3]],null,[[["virtualmanifest",3],["bool",0]],["virtualmanifest",3]],[[["virtualmanifest",3],["string",3]],["virtualmanifest",3]],[[["virtualmanifest",3],["option",4,[["string",3]]]],["virtualmanifest",3]],[[["virtualmanifest",3]],["virtualmanifest",3]],[[["virtualmanifest",3],["usize",0]],["virtualmanifest",3]],[[["virtualmanifest",3],["u32",0]],["virtualmanifest",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["quality",3]],["quality",3]],[[["avc1level",3]],["avc1level",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["streaming_session",3]],["arc",3]],[[["usize",0]],["",0]],[[["ffmpeg_bin",3]],["str",0]],[[["usize",0]],["",0]],[[["ffprobe_bin",3]],["str",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[],["vec",3,[["result",4,[["box",3,[["str",0]]],["str",0]]]]]],null,[[]],[[]],[[]],[[]],[[]],[[["u64",0],["u64",0],["u64",0],["u64",0]],["avc1level",3]],[[["u64",0],["u64",0]],["vec",3,[["quality",3]]]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],null,[[["i64",0]],["option",4,[["avc1level",3]]]],null,null,null,[[["",0]]],[[["",0]]],[[["avc1level",3]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["error",4]],["error",4]],[[["ffpstream",3]],["ffpstream",3]],[[["stream",3]],["stream",3]],[[["tags",3]],["tags",3]],[[["disposition",3]],["disposition",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,null,null,[[],["ffpstream",3]],[[],["stream",3]],[[],["tags",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["ffpstream",3]]]],[[],["result",4,[["stream",3]]]],[[],["result",4,[["tags",3]]]],[[],["result",4,[["disposition",3]]]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,null,[[["ffpstream",3],["ffpstream",3]],["bool",0]],[[["stream",3],["stream",3]],["bool",0]],[[["tags",3],["tags",3]],["bool",0]],[[["disposition",3],["disposition",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["ffpstream",3],["str",0]],["vec",3,[["stream",3]]]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["ffpstream",3],["formatter",3]],["result",6]],[[["stream",3],["formatter",3]],["result",6]],[[["tags",3],["formatter",3]],["result",6]],[[["disposition",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["ffpstream",3]],["option",4,[["string",3]]]],[[["stream",3]],["option",4,[["u64",0]]]],[[["stream",3]],["str",0]],[[["ffpstream",3]],["string",3]],[[["ffpstream",3]],["option",4,[["u64",0]]]],[[["ffpstream",3]],["option",4,[["i32",0]]]],[[["ffpstream",3]],["option",4,[["i64",0]]]],[[["stream",3]],["option",4,[["string",3]]]],[[["ffprobectx",3]]],[[["ffpstream",3]],["option",4,[["u128",0]]]],[[["ffpstream",3],["str",0]],["option",4,[["stream",3]]]],[[["ffpstream",3]],["option",4,[["i64",0]]]],[[["ffpstream",3],["str",0]],["option",4,[["str",0]]]],[[["stream",3]],["option",4,[["string",3]]]],[[["ffpstream",3]],["option",4,[["string",3]]]],[[["ffpstream",3]],["option",4,[["string",3]]]],[[["ffpstream",3]],["option",4,[["string",3]]]],[[["ffpstream",3]],["option",4,[["i64",0]]]],null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["ffpstream",3],["str",0]],["option",4,[["bool",0]]]],[[["ffpstream",3]],["bool",0]],null,null,null,null,[[["ffpstream",3],["ffpstream",3]],["bool",0]],[[["stream",3],["stream",3]],["bool",0]],[[["tags",3],["tags",3]],["bool",0]],[[["disposition",3],["disposition",3]],["bool",0]],[[["str",0]],["ffprobectx",3]],null,null,null,null,[[["ffpstream",3]],["result",4]],[[["stream",3]],["result",4]],[[["tags",3]],["result",4]],[[["disposition",3]],["result",4]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["entry",4]],[[["entry",4]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["entry",4,[["partialeq",8]]],["entry",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["entry",4,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[["entry",4]]],[[]],[[["entry",4,[["partialeq",8]]],["entry",4]],["bool",0]],[[],["entry",4]],[[["entry",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["i64",0]],["string",3]],[[["str",0]],["string",3]],[[],["string",3]],[[["str",0]],["option",4,[["str",0]]]],[[["quality",3],["option",4,[["u64",0]]]],["string",3]],[[["u64",0]],["string",3]],[[["u64",0]],["string",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["clientactions",4]]]],[[["usize",0]]],[[["usize",0]]],[[["handle",3],["unboundedreceiver",3,[["string",3]]],["dbconnection",6]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[],["ctrlevent",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null],"p":[[4,"DimError"],[4,"StreamingErrors"],[8,"ErrorStatusCode"],[13,"ScannerError"],[13,"CookieError"],[13,"ExternalSearchError"],[13,"StreamingError"],[13,"MediafileRouteError"],[13,"DatabaseError"],[13,"MissingFieldInBody"],[13,"DatabaseError"],[13,"OtherNightfall"],[13,"NoMediaFileFound"],[4,"Error"],[4,"MediaSearchType"],[8,"IntoQueryShow"],[3,"ExternalMedia"],[3,"ExternalSeason"],[3,"ExternalEpisode"],[3,"ExternalActor"],[8,"ExternalQuery"],[8,"ExternalQueryShow"],[13,"OtherError"],[13,"DeserializationError"],[13,"RemoteApiError"],[13,"NoSeasonsFound"],[13,"NoEpisodesFound"],[13,"NoGenreFound"],[13,"NoResults"],[3,"CombinedExtractor"],[3,"Metadata"],[8,"FilenameMetadata"],[3,"MockProvider"],[3,"MetadataProviderOf"],[3,"TMDBMetadataProvider"],[3,"TvShows"],[3,"Movies"],[8,"ResultExt"],[3,"RequestLogger"],[8,"Reactor"],[3,"ReactorCore"],[3,"EventReactor"],[4,"Error"],[3,"GlobalSettings"],[3,"WorkUnit"],[8,"MediaMatcher"],[4,"FsWatcherError"],[3,"FsWatcher"],[13,"DatabaseError"],[13,"NotifyError"],[4,"Error"],[13,"MovieScanner"],[13,"TvScanner"],[13,"MediafileError"],[13,"EventDispatch"],[13,"DatabaseError"],[13,"LibraryNotFound"],[4,"Error"],[3,"MovieMatcher"],[13,"PosterInsert"],[13,"BackdropInsert"],[13,"GenreDecouple"],[13,"GetOrInsertGenre"],[13,"CoupleGenre"],[13,"UpdateMediafile"],[13,"ChildrenCount"],[13,"ChildCleanup"],[13,"GetOrInsertMedia"],[4,"Error"],[3,"TvMatcher"],[13,"PosterInsert"],[13,"BackdropInsert"],[13,"GenreDecouple"],[13,"GetOrInsertGenre"],[13,"CoupleGenre"],[13,"UpdateMediafile"],[13,"ChildrenCount"],[13,"ChildCleanup"],[13,"GetOrInsertMedia"],[13,"GetOrInsertSeason"],[13,"GetOrInsertMediaEpisode"],[13,"GetOrInsertEpisode"],[13,"GetSeasonId"],[13,"GetTvId"],[4,"ContentType"],[3,"VirtualManifest"],[3,"StreamTracking"],[3,"Quality"],[3,"STREAMING_SESSION"],[3,"FFMPEG_BIN"],[3,"FFPROBE_BIN"],[3,"Avc1Level"],[4,"Error"],[3,"Stream"],[3,"FFProbeCtx"],[3,"FFPStream"],[3,"Tags"],[3,"Disposition"],[4,"Entry"],[13,"File"],[13,"Directory"],[4,"ClientActions"],[4,"CtrlEvent"],[8,"IntoCtrlEvent"],[13,"Authenticate"],[13,"SendAll"],[13,"Track"],[13,"Forget"],[13,"SendTo"]]},\
"events":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,3,4,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["EventAuthErr","EventAuthOk","EventNewCard","EventNewLibrary","EventRemoveCard","EventRemoveLibrary","EventStartedScanning","EventStoppedScanning","EventStreamIsReady","EventStreamStats","MediafileMatched","Message","PushEventType","borrow","borrow","borrow_mut","borrow_mut","event_type","from","from","id","into","into","serialize","serialize","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","lib_id","library_id","mediafile"],"q":["events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","events::PushEventType","","",""],"d":["Tell client their token is wrong or missing","Tell client auth is ok","A new media card has been added to the database","A new library has been added to the database","A card has been removed from the database","A library has been removed from the database","A library is being scanned.","A library has finished scanning.","A stream is ready to be streamed.","Holds a hashmap of stats collected from ffmpeg over stdout.","Matched mediafile. This hints to a listener that they must …","Struct encompasses a message we are trying to relay to a …","Enum holds all event types used within dim that are …","","","","","Field holds the event type that gets relayed to the …","Returns the argument unchanged.","Returns the argument unchanged.","Field id, can hold anything and the client usually …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,0,0,2,1,2,1,2,2,1,2,2,1,2,1,2,2,1,2,1,2,1,3,4,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[]],null,[[]],[[]],[[["message",3]],["result",4]],[[["pusheventtype",4]],["result",4]],[[["message",3]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null],"p":[[4,"PushEventType"],[3,"Message"],[13,"EventStreamStats"],[13,"EventNewCard"],[13,"MediafileMatched"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
